<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Mac 安装 node]]></title>
    <url>%2F2017%2F06%2F24%2FMac%20%E5%AE%89%E8%A3%85%20node%2F</url>
    <content type="text"><![CDATA[[toc] Homebrew官网: https://brew.sh/index_zh-cn.html 安装 1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 使用搜索: brew search 软件名,如 brew search wget安装: brew install 软件名,如 brew install wget卸载: brew remove 软件名,如 brew remove wget node 安装 1brew install node 查看版本号 1node - v npm (node package manager)npm 安装 node 的时候会附带安装, 是 nodejs 的包管理器, 用于 node 插件的管理 由于 npm 服务器在国外,可以用淘宝的镜像 安装 临时使用 1npm --registry https://registry.npm.taobao.org install express 持久使用 1npm config set registry https://registry.npm.taobao.org 配置后可通过以下方式验证是否成功 1npm config get registry 返回: https://registry.npm.taobao.org/ 通过 cnpm 使用1npm install -g cnpm --registry=https://registry.npm.taobao.org 注: cnpm 和 npm 用法完全一致, 只是在执行命令时将 npm 改为 cnpm 命令npm 安装插件npm install &lt;name&gt; [-g] [--save-dev] 例: npm install gulp-less --save-dev 全局安装: -g, 写入系统环境变量, 在任何地方都能调用 非全局安装: 本地安装将安装在定位目录的 node_modules 文件夹下, 通过 require() 调用 --save 将保存配置信息至 package.json -dev 保存至 package.json 的 devDependencies 节点，不指定 -dev 将保存至 dependencies 节点；一般保存在 dependencies 的像这些 express/ejs/body-parser 等等。 为什么要保存至 package.json ？ 因为 node 插件包相对来说非常庞大，所以不加入版本管理，将配置信息写入 package.json 并将其加入版本管理，其他开发者对应下载即可（命令提示符执行npm install，则会根据 package.json 下载所有需要的包，npm install –production只下载 dependencies 节点的包）。 npm 卸载 使用npm卸载插件：npm uninstall &lt;name&gt;[-g] [--save-dev] PS：不要直接删除本地插件包 借助 rimraf: npm install rimraf -g 用法：rimraf node_modules npm 更新插件 npm update &lt;name&gt; [-g] [--save-dev] 更新全部插件：npm update [--save-dev] 当前目录已安装插件npm list git 察看版本号 12$ git versiongit version 2.11.0 (Apple Git-81) 察看旧版本地址 12$ which git/usr/bin/git 退出终端后再察看新版地址 1234$ git versiongit version 2.14.1$ which git/usr/local/bin/git]]></content>
  </entry>
</search>
